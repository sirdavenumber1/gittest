#!/bin/sh
# chkconfig: 345 98 01
# description: Startup and Shutdown script for Control-M Agent

#----------------------------------------------------------------------------------------------------------------------------------------------------
#	Addition for GCP Instance based on supplied rc.agent_user to:
#		Get GCP Instance ID
#		Retrieve Instance labels added for Control-M
#		Connect to Control-M Server specified in the ctmserver label
#		Join Hostgroup specified in the ctmhostgroup label
#		Use Environment specified in the ctmenvironment label
#----------------------------------------------------------------------------------------------------------------------------------------------------
GCP_Info() {
	GCP_LOG="/var/log/ctm_gcpprovision-`date +'%Y-%m-%d_%H-%M-%S'`.log"

#
#	Get Instance ID and zone

	GCP_Instance_ID=`curl -s "http://metadata.google.internal/computeMetadata/v1/instance/id" -H "Metadata-Flavor: Google"`
	GCP_Zone=`curl -s "http://metadata.google.internal/computeMetadata/v1/instance/zone" -H "Metadata-Flavor: Google"`

#	Get Control-M Server Name to connect to and Control-M Hostgroup to join
	thishost=`hostname`
	CTM_ENV=`gcloud compute instances describe ${thishost} --zone=${GCP_Zone} --format="text(labels)" | grep ctmenvironment | cut -f 2 -d ':' | sed s/[^a-zA-Z0-9_-]//g`
	CTM_HOSTGROUP=`gcloud compute instances describe ${thishost} --zone=${GCP_Zone} --format="text(labels)" | grep ctmhostgroup | cut -f 2 -d ':' | sed s/[^a-zA-Z0-9_-]//g`
	CTM_SERVER=`gcloud compute instances describe ${thishost} --zone=${GCP_Zone} --format="text(labels)" | grep ctmserver | cut -f 2 -d ':' | sed s/[^a-zA-Z0-9_-]//g`
#
#	Get CTM Environment configuration
#
	envurl=${CTM_ENV}-url
	ctmurl=`gcloud secrets versions access latest --secret="${envurl}"`
	
	envuser=${CTM_ENV}-user
	ctmuser=`gcloud secrets versions access latest --secret="${envuser}"`
	
	envpswd=${CTM_ENV}-password
	ctmpswd=`gcloud secrets versions access latest --secret="${envpswd}"`

	envausr=${CTM_ENV}-agentuser
	agentuser=`gcloud secrets versions access latest --secret="${envausr}"`

	ctm env add ${CTM_ENV} ${ctmurl} ${ctmuser} ${ctmpswd}
	ctm env set ${CTM_ENV} 

	echo GCP Instance ID is $GCP_Instance_ID
	echo GCP Zone is $GCP_Zone
	echo Server is $CTM_SERVER
	echo Hostgroup is $CTM_HOSTGROUP
	echo Invocation Type is $STATE_ACTION
	echo Control-M Environment is $CTM_ENV
	echo Control-M Endpoint is $ctmurl
	echo Control-M Agent username is $agentuser

	echo GCP Instance ID is $GCP_Instance_ID >> $GCP_LOG
	echo GCP Zone is $GCP_Zone >> $GCP_LOG
	echo Server is $CTM_SERVER >> $GCP_LOG
	echo Hostgroup is $CTM_HOSTGROUP >> $GCP_LOG
	echo Invocation Type is $STATE_ACTION >> $GCP_LOG
	echo Control-M Environment is $CTM_ENV >> $GCP_LOG
	echo Control-M Endpoint is $ctmurl >> $GCP_LOG
	echo Control-M Agent username is $agentuser >> $GCP_LOG

}

GCP_Setup() {

	local GCP_user_owner=$1

#------------------------------------------------------------------------------------------------------------------------------------
#
#	Do the Agent setup
#
#------------------------------------------------------------------------------------------------------------------------------------


	CTMS_Reg_File=$install_path/ctm/data/ctm_serv_reg.dat

#
#	Current maximum length for agent name is 85 characters
	ALIAS=$(hostname -s):gcp-$GCP_Instance_ID
	len=`expr length "${ALIAS}"`
	if [[ $len -gt 85 ]]
	then
		echo Agent name ${ALIAS} too long >> $GCP_LOG
		exit 99
	else
	    echo Agent name ${ALIAS} will be used
		echo Agent name ${ALIAS} will be used >> $GCP_LOG
	fi


	echo $CTMS_Reg_File
	echo ALIAS is $ALIAS

	echo $CTMS_Reg_File >> $GCP_LOG
	echo ALIAS is $ALIAS >> $GCP_LOG

	if [ ! -f $CTMS_Reg_File ] && [ "$STATE_ACTION" = "start" ] ; then	
		touch $CTMS_Reg_File
		/bin/su - $GCP_user_owner -c "ctm provision setup $CTM_SERVER $ALIAS"
		/bin/su - $GCP_user_owner -c "ctm config server:hostgroup:agent::add $CTM_SERVER $CTM_HOSTGROUP \"$ALIAS\" "
	fi
	if [ -f $CTMS_Reg_File ] && [ "$STATE_ACTION" = "stop" ] ; then
		rm -f $CTMS_Reg_File
		/bin/su - $GCP_user_owner -c "ctm config server:hostgroup:agent::delete $CTM_SERVER $CTM_HOSTGROUP \"$ALIAS\" "
		/bin/su - $GCP_user_owner -c "ctm config server:agent::delete $CTM_SERVER $ALIAS "
	fi
}
#---------------------------------------------------------------------------------------------------------------------------------------------------
#		END of GCP Additions
#---------------------------------------------------------------------------------------------------------------------------------------------------

# set minimal PATH to make sure basic commands like grep and awk are recognized
PATH=/usr/sbin/:/usr/bin:/sbin:$PATH
export PATH

#---------------------------------------------------------------------------------------------------------------------------------------------------
#		Retrieve GCP Info
#---------------------------------------------------------------------------------------------------------------------------------------------------
GCP_Info

#
#	Account name is configured during standard installation. 
#	Here it's retrieved from an GCP secret and should match the 
#	Linux username under which the Control-M agent was provisioned
#
account_name="${agentuser}"
install_path="/home/${agentuser}"

# Get the agent status
AGENT_STATUS_FILE=$install_path/ctm/data/ctm_agent_status.dat
agent_status=`cat $AGENT_STATUS_FILE`

# set config file name
config_file=$install_path/ctm/data/CONFIG.dat

#Get input parameter start|stop|<empty> for backward compatibility
ARG1=`echo $1 | tr '[A-Z]' '[a-z]'`

if [ "$ARG1" = "start" ] || [ "$ARG1" = "stop" ] ; then
	if [ "$ARG1" = "start" ] ; then
		STATE_ACTION="start"
	elif [ "$ARG1" = "stop" ] ; then
		STATE_ACTION="stop"
	fi 
else
	STATE_ACTION="start"
fi

if [ "$agent_status" = "STOPPED" ] ; then # AGENT_STATUS is set to 'STOPPED', exit without starting the Agent
	echo "Control-M/Agent (account $account_name) status is set to 'STOPPED'. Control-M/Agent will not start."
	exit 0
fi

# get the value for config parameter AGENT_OWNER to determine which owner should start the agent
# in case the parameter is missing or empty, start as root.
# This script is executed as root user by the OS during machine startup.
# If the agent should run as agent owner, use 'su' to run start-ag
agent_owner=`grep AGENT_OWNER $config_file | awk '{print $2}'`

#---------------------------------------------------------------------------------------------------------------------------------------------------
#		Set up agent on GCE 
#---------------------------------------------------------------------------------------------------------------------------------------------------
GCP_Setup $agent_owner

if [ "$STATE_ACTION" = "start" ] ; then 

	 
	
	if [ "$agent_owner" != "root" ] ; then
		/bin/su - $agent_owner -c "$install_path/ctm/scripts/start-ag -u $account_name -p ALL"
	else
		$install_path/ctm/scripts/start-ag -u $account_name -p ALL
	fi

else
 
	# backup ctm_agent_status.dat to keep origional status
	TMP_FILE_NAME="ctm_agent_status_dat-`date +'%Y-%m-%d_%H-%M-%S'`.tar"	
	cd $install_path/ctm/data ; tar -cf $TMP_FILE_NAME ctm_agent_status.dat 
	
	if [ "$agent_owner" != "root" ] ; then
			/bin/su - $agent_owner -c "$install_path/ctm/scripts/shut-ag -u $account_name -p ALL"
	else			
			$install_path/ctm/scripts/shut-ag -u $account_name -p ALL
	fi
	
	# restore ctm_agent_status.dat to origional 
	cd $install_path/ctm/data ; tar -xf $TMP_FILE_NAME  ; rm -f $TMP_FILE_NAME 

fi
exit 0


